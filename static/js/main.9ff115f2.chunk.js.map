{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAOC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC5B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCwBOK,EA7BE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAWnB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHfS,SCLGC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKV,UAAU,SAAf,SACC,uBACIA,UAAU,mCACbW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCCDI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACEJ,EAAMK,YCyCKC,G,wDArCd,aAAe,IAAD,8BACb,gBAYDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAZ1C,EAAKC,MAAQ,CACJvB,OAAQ,GACXK,YAAa,IAJN,E,qDAQd,WAAqB,IAAD,OACnBmB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAKzC,WACC,MAAgCC,KAAKN,MAA7BvB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACVyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACpC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAEnD,OAAQjC,EAAOmC,OAIhB,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAAQ8B,SAPlB,6C,GAvBYM,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCKdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9ff115f2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name , email, id}) => { // eshe edhe kjo menyra (props) => const {name, email, id} = props; dhe esht dhe menyra pa i bo kto fare vec props\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} /> \r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\t\t\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\t//const CardComponent = robots.map((user, i) => { //sepse cdo map ka dhe nje vlere parametri mrapa\r\n\t// \treturn (\r\n\t// \t\t<Card\r\n\t// \t\t\tkey={i} // kjo bohet gjithmon kur bojm nje loop . duhet nje key i vecante. i esht index\r\n\t// \t\t    id={robots[i].id}\r\n\t// \t\t    name={robots[i].name}\r\n\t// \t\t    email={robots[i].email}\r\n\t// \t    /> //kjo bohet qe te futen te gjitha te dhenat pa i shkrujt me rradh\r\n\t//     );\r\n\t// }//)\r\n\treturn ( \r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tkey={i} // kjo bohet gjithmon kur bojm nje loop . duhet nje key i vecante. i esht index\r\n\t\t\t\t\t\t    id={robots[i].id}\r\n\t\t\t\t\t\t    name={robots[i].name}\r\n\t\t\t\t\t\t    email={robots[i].email}\r\n\t\t\t\t\t    /> //kjo bohet qe te futen te gjitha te dhenat pa i shkrujt me rradh\r\n\t\t\t\t    );\r\n\t            })\r\n\t        }    \r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t\t<div className='tc pa2'>\r\n\t\t\t<input \r\n\t\t\t    className='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype=\"search\" \r\n\t\t\t\tplaceholder='search robots' \r\n\t\t\t\tonChange = {searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => { //sepse robots esht child i Scroll ne qe e gjejm App.js\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '5px solid black', height:'800px' }}>\r\n\t\t\t{props.children} \r\n        </div>\r\n\t)\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList'; // qe te kemi akses tek CardList.js\r\nimport SearchBox from '../components/SearchBox';\r\n//import { robots } from './robots'; // qe te kemi akses tek robots.js\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n \r\nclass App extends Component {\r\n\tconstructor() {    //constructor perdoret kur deklarojm State\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n           robots: [],\r\n\t       searchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => this.setState({ robots: users }));\r\n\t}\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t    })\r\n\t    return !robots.length ?//if (robots.length === 0) { // ose e bojm kshu (!robots.length)\r\n\t    \t<h1>Loading</h1> ://return <h1>Loading</h1>\r\n\t    //} else {\r\n\t\t\t(//return (\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className='f2'>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots}/> \r\n                    </Scroll>\t\r\n\t\t\t    </div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n//}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card'; // kjo hiqet pasi vejm CardList\n//import CardList from './CardList'; // per mos me perserit ato posht tek <React.stricktMode> // kjo hiqet pasi vejm CardList\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import { robots } from './robots'; //mrena kllapva fusim dhe te tjera qe nuk jan export default por nga ky file. Edhe kte e fusim tek App.js\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}